import json
from web3 import Web3, HTTPProvider
from web3.contract import ConciseContract

infura_url = "https://ropsten.infura.io/v3/4740737568b946a0807303e4d1bca64a"

web3 = Web3(Web3.HTTPProvider(infura_url))
print(web3.isConnected())

private_key = "27830e81221b29c36ab72be62b5989d5366c404c14d9045a53af39b60071dcf1"
account = web3.eth.account.privateKeyToAccount(private_key)
print(account.address)

abi = json.loads('[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":false,"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_email","type":"string"},{"internalType":"string","name":"_signature","type":"string"}],"name":"addIn4","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"emailUser","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"in4List","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"signature","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"nameUser","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"peopleCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"signatureUser","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}]')
bytecode = '6080604052600060015534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ba5806100656000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637c6a763c1161005b5780637c6a763c146101a65780638da5cb5b146103255780639e2c63401461036f578063d0bd978c146105585761007d565b806306587b4514610082578063267c68e014610105578063617f649214610123575b600080fd5b61008a6105db565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ca5780820151818401526020810190506100af565b50505050905090810190601f1680156100f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61010d610693565b6040518082815260200191505060405180910390f35b61012b610699565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016b578082015181840152602081019050610150565b50505050905090810190601f1680156101985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d2600480360360208110156101bc57600080fd5b8101908080359060200190929190505050610751565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561021a5780820151818401526020810190506101ff565b50505050905090810190601f1680156102475780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015610280578082015181840152602081019050610265565b50505050905090810190601f1680156102ad5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156102e65780820151818401526020810190506102cb565b50505050905090810190601f1680156103135780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61032d610943565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105566004803603606081101561038557600080fd5b81019080803590602001906401000000008111156103a257600080fd5b8201836020820111156103b457600080fd5b803590602001918460018302840111640100000000831117156103d657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561043957600080fd5b82018360208201111561044b57600080fd5b8035906020019184600183028401116401000000008311171561046d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104d057600080fd5b8201836020820111156104e257600080fd5b8035906020019184600183028401116401000000008311171561050457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610968565b005b6105606109ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105a0578082015181840152602081019050610585565b50505050905090810190601f1680156105cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606002600060015481526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b5050505050905090565b60015481565b60606002600060015481526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b5050505050905090565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561089b5780601f106108705761010080835404028352916020019161089b565b820191906000526020600020905b81548152906001019060200180831161087e57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109395780601f1061090e57610100808354040283529160200191610939565b820191906000526020600020905b81548152906001019060200180831161091c57829003601f168201915b5050505050905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610970610ab7565b60405180606001604052808481526020018381526020018281525060026000600154815260200190815260200160002060008201518160000190805190602001906109bc929190610acb565b5060208201518160010190805190602001906109d9929190610acb565b5060408201518160020190805190602001906109f6929190610acb565b50905050505050565b60606002600060015481526020019081526020016000206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aad5780601f10610a8257610100808354040283529160200191610aad565b820191906000526020600020905b815481529060010190602001808311610a9057829003601f168201915b5050505050905090565b600160008154809291906001019190505550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b0c57805160ff1916838001178555610b3a565b82800160010185558215610b3a579182015b82811115610b39578251825591602001919060010190610b1e565b5b509050610b479190610b4b565b5090565b610b6d91905b80821115610b69576000816000905550600101610b51565b5090565b9056fea265627a7a723158207559082a9d2445d1945b11cb1b53cf8e687e6026ee648e167064d7f4e2ebda5364736f6c63430005100032'

MyContract = web3.eth.contract(abi=abi, bytecode=bytecode)

#build the transaction
construct_txn = MyContract.constructor().buildTransaction({
    'from': account.address,
    'nonce': web3.eth.getTransactionCount(account.address),
    'gas': 1728712,
    'gasPrice': web3.toWei('21', 'gwei')
})

signed = account.signTransaction(construct_txn)

tx_hash=web3.eth.sendRawTransaction(signed.rawTransaction)
print(web3.toHex(tx_hash))
#transaction hash: 0x249e031a3e314c606dfa69a591724c8090cc889daefdff261b40ffb7c445a02c

tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
print("Contract Deployed At:", tx_receipt['contractAddress'])
#contract address: 0x68Dd5624cF8397520935FD2C3A9a749Ee35d3ce1
